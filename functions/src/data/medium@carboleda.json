{
  "feed": {
    "url": "https://medium.com/feed/@carboleda",
    "title": "Stories by Carlos Fernando Arboleda Garc√©s on Medium",
    "link": "https://medium.com/@carboleda?source=rss-e6b6a26bd0c0------2",
    "author": "",
    "description": "Stories by Carlos Fernando Arboleda Garc√©s on Medium",
    "image": "https://cdn-images-1.medium.com/fit/c/150/150/2*e3ms2HQidjI6Kr1n56fQig.png"
  },
  "items": [
    {
      "title": "Web scraping en Node.js para humanos usando scrape-it",
      "pubDate": "2020-04-11T21:20:24.889Z",
      "link": "https://medium.com/@carboleda/web-scraping-en-node-js-para-humanos-usando-scrape-it-3c469bcb786?source=rss-e6b6a26bd0c0------2",
      "author": "Carlos Fernando Arboleda Garc√©s",
      "thumbnail": "https://cdn-images-1.medium.com/max/900/1*ug9Ku1WdWYaCHLD6P7XXFQ.png",
      "categories": [
        "nodejs",
        "tips",
        "cheeriojs",
        "javascript",
        "libraries"
      ],
      "content": "<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/900/1*ug9Ku1WdWYaCHLD6P7XXFQ.png\" /><figcaption>Imagen oficial de scrape-it</figcaption></figure><h3>Web scraping en NodeJs para humanos usando scrape-it</h3><p>El web scraping es una pr√°ctica en la que a trav√©s de un script de c√≥digo accedemos a una p√°gina web como si de un visitante habitual se tratase y obtenemos la informaci√≥n que se encuentra en la p√°gina accediendo a los elementos html. Esto es generalmente √∫til cuando queremos obtener informaci√≥n de un sitio web que no provee un API¬†oficial.</p><p>A√∫n no ser√° parte de este post, a trav√©s del web scraping tambi√©n es posible generar eventos sobre los elementos de la p√°gina simulando las acciones que har√≠a un usuario, lo cual se puede lograr usando un headless browser como <a href=\"https://github.com/puppeteer/puppeteer\">Puppeteer</a>.</p><p><em>El web scraping puede ser considerado un delito dependiendo de la informaci√≥n a la que est√°s accediendo, el uso que le est√©s dando a la misma y el fin con el que lo hagas. Yo no soy experto en delitos inform√°ticos as√≠ que asegurate de no meterte en problemas.</em></p><h3>¬øC√≥mo funciona web scraping?</h3><p>En esencia, el web scraping para extraer informaci√≥n tiene dos¬†fases:</p><ol><li>Obtener el contenido de la p√°gina web a trav√©s de una petici√≥n HTTP¬†GET.</li><li>Pasar el contenido de la p√°gina a la librer√≠a de scraping para que lo interprete y as√≠ podamos comenzar a hacer queries mediante selectores CSS.</li></ol><p>El web scraping puede hacerse en diferentes lenguajes y lo cierto es que deber√≠amos elegir el que mejor se adapte lo que queramos hacer. Por sus caracter√≠sticas hay tendencia a utilizar lenguajes como Python, Perl, Java y <strong>Javascript (NodeJS)</strong>.</p><p>Como ya te podr√°s dar cuenta, en este caso vamos a utilizar Javascript con <a href=\"https://nodejs.org\">Node.js</a>, aqu√≠ tenemos diferentes opciones para hacer scraping como lo son <a href=\"https://cheerio.js.org\"><em>cheerio</em></a>, <a href=\"https://www.npmjs.com/package/noodlejs\">noodlejs</a>, <a href=\"https://www.npmjs.com/package/osmosis\">osmosis</a> y en el que nos vamos enfocar en este post<a href=\"https://www.npmjs.com/package/scrape-it\"> <strong>scrape-it</strong></a>.</p><h3>Veamos un ejemplo con una librer√≠a de bajo¬†nivel</h3><p>Tomemos como referencia el siguiente html que usaremos para hacer el scraping, este html es una lista de presentaciones que tienen elementos con informaci√≥n de titulo, descripci√≥n y un¬†enlace.</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/b6ff7fb029b5fcee234ab2366395c01f/href\">https://medium.com/media/b6ff7fb029b5fcee234ab2366395c01f/href</a></iframe><p>Ahora bien, si hici√©ramos el scraping utilizando la librer√≠a cheerio tendr√≠amos un c√≥digo como el siguiente:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/bcd4d52126d05637973b55b082e498ab/href\">https://medium.com/media/bcd4d52126d05637973b55b082e498ab/href</a></iframe><p>Como te dar√°s cuenta usando una librer√≠a de bajo nivel como cheerio, es necesario ejecutar manualmente cada selector para obtener la informaci√≥n del elemento. Entonces imagina que tienes una gran p√°gina con varios niveles de profundidad y mucha informaci√≥n‚Ä¶ <strong>üò®</strong></p><h3>Ahora usemos scrape-it</h3><p>Despu√©s de ver la forma tradicional de hacer scraping, por fin conoceremos al protagonista de este¬†post...</p><p><em>Scrape-it</em> es una librer√≠a de NodeJs creada por <a href=\"https://github.com/IonicaBizau\">IonicƒÉ BizƒÉu (Johnny B.)</a> que agrega una capa de abstracci√≥n sobre cheerio para facilitar much√≠simo la extracci√≥n de informaci√≥n de la p√°gina web sin tenernos que preocupar de varios conceptos relacionados con la manipulaci√≥n del¬†<a href=\"https://developer.mozilla.org/es/docs/Glossary/DOM\">DOM</a>.</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/217abf071aa0d6821f6aa26b0da7f8fa/href\">https://medium.com/media/217abf071aa0d6821f6aa26b0da7f8fa/href</a></iframe><p>El resultado ser√° un JSON similar a¬†este:</p><pre>[<br>  {<br>    &quot;title&quot;: &quot;Trabajo remoto&quot;,<br>    &quot;description&quot;: &quot;En esta presentaci√≥n compartir√©...&quot;,<br>    &quot;link&quot;: &quot;/carboleda/remote-work&quot;<br>  }<br>  ...<br>]</pre><p>Como puedes ver scrape-it es muy intuitivo, y es que solo debemos identificar los selectores y definir en un objeto la estructura los atributos donde que queremos que se guarde la informaci√≥n al finalizar el scraping. Scrape-it tambien nos provee entre otras funcionalidades, una funci√≥n <a href=\"https://www.npmjs.com/package/scrape-it#params-1\"><em>convert</em></a> que podemos usar para convertir el valor obtenido del elemento.</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FTJO5x5QQM72Q0weWXN%2Ftwitter%2Fiframe&amp;display_name=Giphy&amp;url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FTJO5x5QQM72Q0weWXN%2Fgiphy.gif&amp;image=https%3A%2F%2Fi.giphy.com%2Fmedia%2FTJO5x5QQM72Q0weWXN%2Fgiphy.gif&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=giphy\" width=\"435\" height=\"435\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/b68aedb6cc2b50c1bb58b21e4a64aefc/href\">https://medium.com/media/b68aedb6cc2b50c1bb58b21e4a64aefc/href</a></iframe><h4>Algunos enlaces de inter√©s sobre scrape-it por si quieres profundizar</h4><ul><li><a href=\"https://github.com/IonicaBizau/scrape-it\">IonicaBizau/scrape-it</a></li><li><a href=\"https://scrape-it.saasify.sh\">scrape-it</a></li><li><a href=\"https://ionicabizau.net/blog/30-how-to-write-a-web-scraper-in-nodejs\">How to write a web scraper in Node.js</a></li></ul><blockquote>Todos los cr√©ditos de scrape-it son para IonicƒÉ BizƒÉu (Johnny B.), este post solo pretende destacar el gran trabajo hecho con esta librer√≠a y que muchas m√°s personas la conozcan.</blockquote><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=3c469bcb786\" width=\"1\" height=\"1\">"
    },
    {
      "title": "Git patch‚Ää‚Äî‚ÄäAplicando parches con estilo (No copy/paste)",
      "pubDate": "2019-11-20T22:01:01.267Z",
      "link": "https://medium.com/@carboleda/git-patch-aplicando-parches-con-estilo-no-copy-paste-e63f3de2e61?source=rss-e6b6a26bd0c0------2",
      "author": "Carlos Fernando Arboleda Garc√©s",
      "thumbnail": "https://cdn-images-1.medium.com/max/1024/1*DOofjb2Xa9-1OUNq47jPoQ.png",
      "categories": [
        "git",
        "sourcetree",
        "github",
        "bitbucket",
        "atlassian"
      ],
      "content": "<h3><strong>Git patch‚Ää‚Äî‚ÄäAplicando parches con estilo (No copy/paste)</strong></h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*DOofjb2Xa9-1OUNq47jPoQ.png\" /><figcaption>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\">Freepik</a> and <a href=\"https://www.flaticon.com/authors/smashicons\">Smashicons</a> from¬†<a href=\"http://www.flaticon.com/\">Flaticon</a></figcaption></figure><p>Llevo varios a√±os utilizando Git y no ten√≠a ni idea de que esto se pod√≠a hacer, pero la necesidad me llevo a encontrar la soluci√≥n ojeando un poco en las opciones del <a href=\"https://www.sourcetreeapp.com/\">Sourcetree</a> (un cliente Git muy popular en Mac OS) y con una r√°pida b√∫squeda en internet. As√≠ que voy a contarles por que llegu√© a necesitar del git¬†patch‚Ä¶</p><p>Hace un par de d√≠as le estaba ayudando a uno de mis compa√±eros de equipo a implementar una soluci√≥n para una de sus tareas del sprint. Cuando termin√© la implementaci√≥n que quer√≠a sugerirle, necesitaba pasarle los cambios para que √©l los revisara e hiciera las respectivas pruebas. Lo primero que pens√© fue en pasarle cada l√≠nea de c√≥digo que cambi√© y decirle donde la pon√≠a ya que no eran muchos cambios; lo segundo fue hacer un commit sobre su branch para que √©l bajara los cambios, pero esa no era mi tarea as√≠ que no me pareci√≥ pertinente. As√≠ que me puse a revisar en las opciones del Sourcetree y vi algo que dec√≠a ‚ÄúCreate Patch‚Äù y al explorarlo un poco not√© que era lo que necesitaba y me pareci√≥¬†genial!</p><p>Te dejo un par de capturas de pantalla de como es la creaci√≥n de un patch desde Sourcetree:</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/301/1*VUjWyNVBk9zAf-JvKRCdGA.png\" /><figcaption>Opciones para crear y aplicar patch. Tomado de <a href=\"https://www.sourcetreeapp.com/\">Sourcetree</a></figcaption></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/842/1*QI_U9kLpnvMriIhe7gqC8g.png\" /><figcaption>Crear un patch a partir de la copia de trabajo actual. Tomado de <a href=\"https://www.sourcetreeapp.com/\">Sourcetree</a></figcaption></figure><h3><strong>Pero c√≥mo lo puedo usar en la terminal??</strong></h3><p>Esta misma pregunta me la hice r√°pidamente, ya que mi compa√±ero utiliza Linux y Sourcetree solo est√° para Mac OS. Una b√∫squeda r√°pida en San Google me dio la respuesta y es s√∫per f√°cil de utilizar en su forma m√°s¬†b√°sica:</p><ul><li><strong>Generar un archivo con todos los cambios de la copia de trabajo¬†actual:</strong></li></ul><pre>&gt; git diff &gt; changes.patch</pre><ul><li><strong>Aplicar un archivo patch sobre una copia de¬†trabajo:</strong></li></ul><pre>&gt; git apply changes.patch</pre><p>Lo que te he explicado aqu√≠ es el uso m√°s b√°sico de git patch, pero hay una gran cantidad de configuraciones y diferentes usos que se le puede dar. Por eso a continuaci√≥n te dejo enlaces a la documentaci√≥n oficial:</p><ul><li><a href=\"https://git-scm.com/docs/git-format-patch\">Git - git-format-patch Documentation</a></li><li><a href=\"https://git-scm.com/docs/git-apply\">Git - git-apply Documentation</a></li><li><a href=\"https://git-scm.com/docs/git-diff\">Git - git-diff Documentation</a></li></ul><p>Espero te sea de mucha utilidad‚Ä¶ Si te ha gustado este post, recomiendalo üëè, comenta y comparte!</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=e63f3de2e61\" width=\"1\" height=\"1\">"
    },
    {
      "title": "Thanks for share this cool post.",
      "pubDate": "2019-11-10T18:50:22.190Z",
      "link": "https://medium.com/@carboleda/thanks-for-share-this-cool-post-99e5e4ce03e8?source=rss-e6b6a26bd0c0------2",
      "author": "Carlos Fernando Arboleda Garc√©s",
      "thumbnail": "",
      "content": "<p>Thanks for share this cool post. I have only one annotation‚Ä¶ You are defined a <em>ResourceManager</em> class to avoid use the Context<em> </em>and android imports in your Presenter but you are using R class for access to strings¬†resource and then pass to <em>ResourceManager</em>.</p><p>Which is the better way of manage¬†it?</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=99e5e4ce03e8\" width=\"1\" height=\"1\">"
    },
    {
      "title": "Migrando Android de Java a Kotlin",
      "pubDate": "2019-01-26T05:36:19.353Z",
      "link": "https://medium.com/@carboleda/migrando-android-de-java-a-kotlin-a832e8d67205?source=rss-e6b6a26bd0c0------2",
      "author": "Carlos Fernando Arboleda Garc√©s",
      "thumbnail": "https://cdn-images-1.medium.com/max/850/1*bFKThmnrLySX7HRCKCyEmg.jpeg",
      "categories": [
        "mobil",
        "java",
        "android",
        "kotlin-beginners",
        "kotlin"
      ],
      "content": "<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/850/1*bFKThmnrLySX7HRCKCyEmg.jpeg\" /><figcaption>Imagen de Ruben Tejera. (<a href=\"https://rubentejera.com/por-que-usar-kotlin/\">https://rubentejera.com/por-que-usar-kotlin/</a>)</figcaption></figure><p>Kotlin fue anunciado durante el Google I/O de 2017 como el lenguaje de programaci√≥n oficial para desarrollar aplicaciones en Android y gracias a su capacidad de interoperar con Java, simplicidad y versatilidad, se est√° convirtiendo en el lenguaje m√°s utilizado a la hora de programar en¬†Android.</p><p>En este post te explico las caracter√≠sticas principales de Kotlin y algunas recomendaciones para que comiences a utilizarlo en tus proyectos sin morir en el¬†intento.</p><h3><strong>Qu√© es¬†Kotlin?</strong></h3><p>Kotlin es un lenguaje de programaci√≥n de tipado est√°tico que corre sobre la JVM (Java Virtual Machine), desarrollado por JetBrains (los mismos de IntelliJ y Android Studio), con capacidad para interoperar 100% con Java y adem√°s puede ser compilado a JavaScript.</p><h3>Por qu√© migrar de Java a¬†Kotlin?</h3><p>Google estableci√≥ que Kotlin es el lenguaje oficial en Android y hoy en d√≠a no saber Kotlin te pone en desventaja en el mercado. Y adem√°s, tiene una sintaxis que te permite escribir c√≥digo fuente hasta en un 40% menos de l√≠neas que en Java. Y no puedo dejar de mencionar que la curva de aprendizaje es muy¬†corta!</p><p>Desde hace unos meses comenc√© la migraci√≥n de Java a Kotlin, principalmente motivado por la interoperabilidad con Java y la capacidad de controlar las variables nulas de una forma muy f√°cil, lo cual me permitir√≠a migrar de forma progresiva; Pero me encontr√© con un universo de posibilidades‚Ä¶</p><h3>Ahora vamos a ver algunas cosas cool de¬†Kotlin!</h3><p>Antes de comenzar en conveniente mencionar algunas particularidades de¬†Kotlin:</p><ol><li>Todo objeto es un <strong>Any</strong>, el nodo ra√≠z de la jerarqu√≠a.</li><li>Para la definici√≥n de variables se utiliza <strong>val</strong> o <strong>var</strong>, y opcionalmente en frente y separado de¬†<strong>:</strong> (dos puntos ) se define el tipo de¬†dato.</li><li>Se habla de funciones en lugar de¬†m√©todos.</li><li>Todo miembro de una clase (atributo o funci√≥n) por defecto es¬†p√∫blico.</li><li>Kotlin tiene su propio compilador (<em>genera archivos¬†.class</em>).</li><li>Toda expresi√≥n o funci√≥n por defecto devuelve un <strong>Unit</strong> (es como <em>void</em> en¬†java).</li></ol><ul><li><a href=\"https://kotlinlang.org/docs/reference/null-safety.html\"><strong>Null Safety</strong></a><strong> (¬†?</strong>,<strong>¬†.?</strong>,<strong>¬†!!</strong>,<strong>¬†?:¬†)</strong></li></ul><p>Ahora podemos controlar con m√°s facilidad el famoso <em>NullPointerException.</em></p><pre>var a: String = &quot;abc&quot;<br>a = null // error de compilaci√≥n</pre><p>Para permitir nulos debemos declarar la variable como¬†<em>String</em><strong><em>?</em></strong></p><pre>var a: String<strong>?</strong> = &quot;abc&quot;<br>a = null // ok</pre><p>Para acceder de forma segura a una variable que permite valores nulos, debemos usar la sintaxis¬†.<strong>?</strong></p><pre>val l = a<strong>?.</strong>length // Si b es null el length tambi√©n devolver√° null</pre><p>El operador¬†<strong>!!</strong> permite convertir cualquier variable que soporte valores nulos a non-null al momento de accederla.</p><pre>val l = a!!<strong>.</strong>length //Si b es null se lanzar√° un NullPointerException</pre><p>El operador Elvis¬†<strong>?:</strong> es una contracci√≥n del famoso operador ternario que podemos usar en diferentes lenguajes.</p><pre>int l = a != null ? a.length : -1 // Java<br>val l = a?.length <strong>?:</strong> -1 // (Kotlin) Operador Elvis</pre><ul><li><strong>Expresiones</strong></li></ul><p>En Kotlin los condicionales pueden retornar valores directamente.</p><pre>val l = if(a != null) a.length else -1</pre><pre>val l2 = when(a) {<br>    null -&gt; -1<br>    else -&gt; a.length<br>}</pre><ul><li><a href=\"https://kotlinlang.org/docs/reference/data-classes.html\"><strong>Data class</strong></a></li></ul><p>Nunca antes fue tan f√°cil definir clases (<a href=\"https://es.wikipedia.org/wiki/Plain_Old_Java_Object\">POJO</a>), Kotlin hace el trabajo sucio por nosotros infiriendo el constructor de clase y las funciones get() / set(). Y heredando de <em>Any</em> las funciones equals() / hasCode() y¬†copy()</p><pre>// Definici√≥n<br>data class Usuario (<br>    var nombre: String,<br>    var edad: Int,<br>    var ciudad: String<br>)</pre><pre>// Uso del data class<br>val unUsuario = Usuario(&quot;Carlos&quot;, 30, &quot;Cali&quot;)</pre><ul><li><strong>Par√°metros nombrados y valores por¬†defecto</strong></li></ul><p>Con Kotlin podemos olvidarnos de tener que sobrecargar constructores o funciones, ya que podemos declarar uno solo con todos los par√°metros e invocarlo pasando solo los necesarios.</p><pre>// Definici√≥n<br>data class Usuario (<br>    var nombre: String,<br>    var edad: Int,<br>    val ciudad: String? = &quot;Cali&quot; // Definimos un valor por defecto<br>)</pre><pre>// Uso del data class<br>val usuario1 = Usuario(&quot;Carlos&quot;, 30)<br>val usuario2 = Usuario(nombre = &quot;Carlos&quot;, edad = 30)</pre><ul><li><strong>Template string</strong></li></ul><p>Para darle formato a una cadena (String) insertando valores din√°micos, en Java debemos utilizar <em>String.format</em>, mientras que en Kotlin podemos insertar los valores directamente en la cadena (String) o incluso utilizar expresiones.</p><pre>val saludo = &quot;Hola <strong>$</strong>nombre&quot; //Variable<br>mTextView.setText(&quot;Hola <strong>$</strong>nombre, tu nombre tiene <strong>${</strong>nombre.length<strong>}</strong> caracteres&quot;) // Expresi√≥n</pre><p>Tambi√©n es posible usar cadenas de String de multiples l√≠neas.</p><pre>val info = <strong>&quot;&quot;&quot;</strong><br>    Nombre: $nombre<br>    Edad: $edad<br>    Ciudad: $ciudad<br>    <strong>&quot;&quot;&quot;</strong><br>mTextView.setText(info)</pre><ul><li><strong>Property sintax</strong></li></ul><p>Utilizando property sintax podemos omitir el uso expl√≠cito de las funciones <em>set</em> y <em>get</em> para simplemente asignar u obtener el valor de la variable como si se tratara de una variable¬†p√∫blica.</p><pre>// De manera convencional con los get y set<br>usuario.setNombre(&quot;Carlos Fernando&quot;)<br>mTextView.setText(usuario.getNombre())</pre><pre>// Con property sintax<br><strong>usuario.nombre</strong> = &quot;Carlos Fernando&quot; // set<br>mTextView.text = <strong>usuario.nombre</strong> // get</pre><ul><li><a href=\"https://kotlinlang.org/docs/reference/typecasts.html#smart-casts\"><strong>Smart casting</strong></a></li></ul><p>El compilador detecta cuando verificamos el tipo de una variable y realiza el cast autom√°tico en caso de ser necesario.</p><pre>fun demo(a: Any) {<br>    if (a <strong>is</strong> String) {<br>        mTextView.text = a // x es casteada a String automaticamente<br>    }<br>}</pre><ul><li><a href=\"https://kotlinlang.org/docs/reference/coding-conventions.html#lambdas\"><strong>Lambdas</strong></a></li></ul><p>Los lambdas son un herramienta potente de Kotlin que permite simplificar nuestro c√≥digo al reducir el c√≥digo necesario para declarar un callback y permitirnos pasar funciones como par√°metros sin necesidad de crear interfaces.</p><pre>when (c) {<br>    true -&gt; yes()<br>    false <strong>-&gt; {</strong><br>        not()<br>        println(&quot;c es igual a false&quot;)<br>    <strong>}</strong><br>}</pre><pre>var contador = 0<br>boton.addClickListener <strong>{</strong><br>    contador++<br>    mTextView.text = &quot;Clicks $contador&quot;<br><strong>}</strong></pre><pre>fun setOnClickListener(listener: (view: View) -&gt; Unit) <strong>{}</strong></pre><ul><li><a href=\"https://kotlinlang.org/docs/tutorials/android-plugin.html\"><strong>Extensions</strong></a><strong>‚Ää‚Äî‚ÄäView¬†Binding</strong></li></ul><p>Utilizando el plugin <em>kotlin-android-extensions</em> podremos acceder a las widgets o vistas de nuestros layouts directamente y sin necesidad de utilizar el muy conocido <em>findViewById()</em>.</p><pre><strong>import kotlinx.android.synthetic.main.activity_main.*</strong></pre><pre>class MainActivity : Activity() {<br>    override fun onCreate(savedInstanceState: Bundle?) {<br>        super.onCreate(savedInstanceState)<br>        setContentView(R.layout.activity_main)<br>        <br>        // En lugar de findViewById&lt;TextView&gt;(R.id.textView)<br>        mTextView.text = &quot;Hola, mundo!&quot;<br>    }<br>}</pre><h3>Y qu√© pasa si ya tengo un proyecto Android en¬†Java?</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/480/1*iXG027k5mLp4LJXiOeTRyw.gif\" /></figure><p><strong>No te preocupes!</strong> Para esto Android Studio tiene un haz bajo la manga. Y es que tiene una opci√≥n que nos permite convertir el c√≥digo Java a Kotlin en dos¬†clics.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/341/1*Q-9CllZ_k5Tidu4rt7eCMg.png\" /></figure><p>Una vez presionamos sobre la opci√≥n comenzar√° a convertir el archivo y despu√©s nos preguntar√° si tambi√©n queremos actualizar las referencias a ese¬†archivo.</p><blockquote><strong>IMPORTANTE:</strong> Como ya sabemos, Kotlin puede interoperar con Java as√≠ que al convertir los archivos debemos revisar minuciosamente cada invocaci√≥n de m√©todos/funciones de Java a Kotlin, ya que si una variable es pasada como null a un m√©todo que la recibe como non-null obtendremos un error como el siguiente:</blockquote><pre>java.lang.IllegalArgumentException: Parameter specified as non-null is null: method kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull</pre><p>Veamos un¬†ejemplo:</p><pre>// Kotlin<br>class Mensaje {<br>    //La forma correcta ser√≠a: <em>fun mostrar(text: </em>String<strong><em>?</em></strong><em>) {</em><br>    fun mostrar(text: String) { //java.lang.IllegalArgumentException<br>        //Hacer algo<br>    }<br>}</pre><pre>// Java<br>Mensaje.mostrar(null);</pre><p>Yo comenc√© la migraci√≥n de una de mis aplicaciones hace un par de meses y actualmente he migrado un 40% a Kotlin obteniendo excelentes resultados. Logr√© mejorar la estabilidad de la aplicaci√≥n al utilizar el <strong><em>null safety</em></strong> y simplificar el c√≥digo fuente usando <strong><em>data class</em></strong><em>, </em><strong><em>lambdas</em></strong><em>,</em><strong><em>View Bindings</em></strong><em> y varias¬†m√°s</em>.</p><p>Si vas a comenzar a migrar un proyecto, te recomiendo que lo hagas de forma progresiva a medida que va necesitando modificar el c√≥digo existente. No frenes el proyecto hasta migrar todo porque ser√° mucho m√°s desgastante y adem√°s puede verse afectado el proyecto. Recuerda que Kotlin puede funcionar perfectamente con Java, as√≠ que puedes tomarlo con¬†calma.</p><p>Te dejo los enlaces a dos cursos gratuitos de <a href=\"https://www.udacity.com/\">Udacity</a> sobre Kotlin, el primero te permitir√° conocer las todas caracter√≠sticas del lenguaje y el en segundo puedes ver m√°s en detalle como migrar una aplicaci√≥n de Java a¬†Kotlin.</p><ul><li><a href=\"https://www.udacity.com/course/kotlin-bootcamp-for-programmers--ud9011\">Kotlin Bootcamp for Programmers | Udacity</a></li><li><a href=\"https://www.udacity.com/course/kotlin-for-android-developers--ud888\">Kotlin for Android Developers | Udacity</a></li></ul><p>Si te ha gustado este post, recomiendalo üëè, comenta y comparte!</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=a832e8d67205\" width=\"1\" height=\"1\">"
    }
  ]
}